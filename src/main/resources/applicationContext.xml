<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"     
       xmlns:aop="http://www.springframework.org/schema/aop"     
       xmlns:context="http://www.springframework.org/schema/context"    
       xmlns:tx="http://www.springframework.org/schema/tx"     
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="http://www.springframework.org/schema/aop     
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd     
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context-3.1.xsd     
        http://www.springframework.org/schema/tx     
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://cxf.apache.org/jaxrs
	    http://cxf.apache.org/schemas/jaxrs.xsd">   


<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>classpath:mongo.properties</value>
		</list>
	</property>
</bean> -->

<!-- <context:component-scan base-package="com.cc.cxfdemo.dao.*" />  -->


<import resource="classpath:META-INF/cxf/cxf.xml" />  
<!-- <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />  --> 
<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />  

<jaxrs:server id="serviceContainer" address="/" >
    <jaxrs:serviceBeans>
    	<ref bean="userService" />
    </jaxrs:serviceBeans>
    
    <!-- 输入日志拦截器 -->  
    <!-- <jaxrs:inInterceptors>  
         <ref bean="inMessageInterceptor"/>  
    </jaxrs:inInterceptors>   -->
    <!-- 输出日志拦截器 -->  
    <!-- <jaxrs:outInterceptors>  
       <ref bean="outMessageInterceptor"/>  
    </jaxrs:outInterceptors> -->
    
    <jaxrs:extensionMappings>  
        <entry key="json" value="application/json" />  
        <entry key="xml" value="application/xml" />  
    </jaxrs:extensionMappings>  
    
    <!-- to return json, nedd to add this -->
    <jaxrs:providers>
        <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
        <bean class="com.cc.cxfdemo.exception.mapper.InvokeFaultExceptionMapper"/> 
    </jaxrs:providers>
    
    <jaxrs:features>
    	<bean class="com.cc.cxfdemo.feature.HelloWorldFeature"></bean>  
    </jaxrs:features>
    
</jaxrs:server>
	
	<bean id="userService" class="com.cc.cxfdemo.endpoint.impl.UserServiceImpl" >
		<property name="userDao" ref="userDao"/>
	</bean>
	
    <bean id="inMessageInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />  
    <bean id="outMessageInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor"/> 
    <bean id="helloInInterceptor" class="com.cc.cxfdemo.interceptor.HelloInInterceptor"/> 
    
    <bean id="userDao" class="com.cc.cxfdemo.dao.UserDao"/>
    
    <!-- <aop:aspectj-autoproxy/>  -->
    
    <!-- <aop:config>  
        <aop:aspect id="TestAspect" ref="cxfAopBean">  
            配置com.spring.service包下所有类或接口的所有方法  
            <aop:pointcut id="businessService"  
                expression="execution(* com.cc.cxfdemo.endpoint.impl.*.*(..))" />  
            <aop:before pointcut-ref="businessService" method="doBefore"/>  
            <aop:after pointcut-ref="businessService" method="doAfter"/>  
            <aop:around pointcut-ref="businessService" method="doAround"/>  
            <aop:after-throwing pointcut-ref="businessService" method="doAfterThrowing" throwing="ex"/>  
        </aop:aspect>  
    </aop:config>   -->
    
    <aop:aspectj-autoproxy />
      
    <bean id="cxfAopBean" class="com.cc.cxfdemo.aop.CxfAop" /> 
    
	
</beans>
